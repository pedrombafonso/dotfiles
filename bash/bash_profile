# tell ls to be colourful
export CLICOLOR=1

#
# Aliases
#

# CrowdProcess Projects
alias _d='cd ~/dev/'
# CrowdProcess MinusCode
alias _mc='cd ~/dev/minuscode'
alias _ge='cd ~/dev/minuscode/dev/gitescrow/proj'
alias _sa='cd ~/dev/minuscode/dev/netzinkubator/swiftalarm'

# cd git root
# alias _groot='cd "$(git rev-parse --show-toplevel)"'
# ll
alias ll='ls -lah'
alias l='ls'
# pwd output to clipboard
alias pwdcopy='pwd | pbcopy'
# shared key output to clipboard
alias pkcopy='pbcopy < ~/.ssh/id_rsa.pub'

#
# NodeJS
#

# nvm
[[ -s ~/.nvm/nvm.sh ]] && . ~/.nvm/nvm.sh # This loads NVM
nvm use latest

#
# Ruby
#

# rvm
PATH=$PATH:$HOME/.rvm/bin
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

#
# Shell
#

# Prompt
export NO_COLOR="\[\e[0m\]"
export LIGHT_GREEN="\[\033[0;91m\]"
export CYAN="\[\033[0;36m\]"
export PS1="$CYAN\W$NO_COLOR \$(git branch 2> /dev/null | grep -e '\* ' | sed 's/^..\(.*\)/[$LIGHT_GREEN\1$NO_COLOR]/') â€¢ "
#
# PATH
#
export PATH=/opt/local/bin:/opt/local/sbin:$PATH
# Finished adapting your PATH environment variable for use with MacPorts.
export PATH=${PATH}:~/dev/tools/adt-bundle/sdk/platform-tools:~/dev/tools/adt-bundle/sdk/tools


#
# SCM BREEZE
#
[ -s "$HOME/.scm_breeze/scm_breeze.sh" ] && source "$HOME/.scm_breeze/scm_breeze.sh"

### Added by the Heroku Toolbelt
export PATH="/usr/local/heroku/bin:$PATH"

#
# z
#
. ~/.dotfiles/z/z.sh


#
# TMUXINATOR
#
export EDITOR="atom"
[[ -s "/Users/pedrombafonso/.gvm/scripts/gvm" ]] && source "/Users/pedrombafonso/.gvm/scripts/gvm"

#
# Visual Sutdio Code
#
code () {
    if [[ $# = 0 ]]
    then
        open -a "Visual Studio Code"
    else
        [[ $1 = /* ]] && F="$1" || F="$PWD/${1#./}"
        open -a "Visual Studio Code" --args "$F"
    fi
}

#
# Docker Settings
#
DOCKER_OPTS="-H unix:///var/run/docker.sock"
if [ -f ~/.boot2dockercfg ]; then
    source ~/.boot2dockercfg
fi

# ------------------------------------
# Docker alias and function
# ------------------------------------

# Get latest container ID
alias dl="docker ps -l -q"

# Get container process
alias dps="docker ps"

# Get process included stop container
alias dpa="docker ps -a"

# Get images
alias di="docker images"

# Get container IP
alias dip="docker inspect --format '{{ .NetworkSettings.IPAddress }}'"

# Run deamonized container, e.g., $dkd base /bin/echo hello
alias dkd="docker run -d -P"

# Run interactive container, e.g., $dki base /bin/bash
alias dki="docker run -i -t -P"

# Stop all containers
dstop() { docker stop $(docker ps -a -q); }

# Remove all containers
drm() { docker rm $(docker ps -a -q); }

# Stop and Remove all containers
alias drmf='docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)'

# Remove all images
dri () { docker rmi $(docker images -q); }

# Dockerfile build, e.g., $dbu tcnksm/test
dbu () { docker build -t=$1 .; }

# Show all alias related docker
dalias () { alias | grep 'docker' | sed "s/^\([^=]*\)=\(.*\)/\1 => \2/"| sed "s/['|\']//g" | sort; }

# Docker Aliases
# Kill all running containers.
alias dockerkillall='docker kill $(docker ps -q)'

# Delete all stopped containers.
alias dockercleanc='printf "\n>>> Deleting stopped containers\n\n" && docker rm $(docker ps -a -q)'

# Delete all untagged images.
alias dockercleani='printf "\n>>> Deleting untagged images\n\n" && docker rmi $(docker images -q -f dangling=true)'

# Delete all stopped containers and untagged images.
alias dockerclean='dockercleanc || true && dockercleani'

# Enter into a running container
din () { docker exec -i -t $1 /bin/bash; }

# Run bash for any image
dbash () { docker run --rm -i -t -e TERM=xterm --entrypoint /bin/bash $1; }

# DOCKER COMPOSE
alias dcup='docker-compose up -d; docker-compose logs'
alias dcdown='docker-compose stop; dockerclean'


#
# RabbitMQ
#
PATH=$PATH:/usr/local/sbin
